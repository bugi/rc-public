#!bash
# vim:set ft=sh tabstop=2 softtabstop=2 shiftwidth=2 expandtab autoindent copyindent :



#----------- DIRS -----------

function d ()
{
  echo # to visually separate from prompt, which likely also includes the current path
  dirs -v
  echo # to visually separate from prompt, which likely also includes the current path
  #
  # Alternately, could define in terms of DIRS, a shell+perl script that
  # factors out common strings to reduce display complexity.  Left as an
  # exercise for the future.  The current DIRS.pl needs work, and should
  # be implemented as a native bash function anyway.
}

function pd ()
{
  if [ $# -eq 0 ]
  then
    builtin pushd >/dev/null || return
    d
    return
  fi
  local d
  for d in "$@"
  do
    if [ -z "$d" ]
    then
      # treat '' as lack of an argument instead of just complaining
      builtin pushd >/dev/null || return
    else
      builtin pushd "$d" >/dev/null || return
    fi
  done
  d
}
function pd- () { pd -1 "$@" ; }

# DIRS is a shell+perl script that factors out common strings to reduce display complexity
alias diirs='DIRS'  # or 'dirs -v' in a pinch
alias dirss='DIRS'  # or 'dirs -v' in a pinch
alias diirs='dirs -v'
alias dirss='dirs -v'
unalias diirs
unalias dirss

function PUSHD ()
{
  pd "$@"
}

function popd ()
{
  builtin popd "$@" >/dev/null
  local R=$?
  d
  return $R
}

function POPD ()
{
  popd "$@"
}

function UP ()
{
  local n=1
  if [ -n "$1" ]
  then
    n="$1" ; shift
  fi
  PUSHD +$n
}

function DOWN ()
{
  local n=1
  if [ -n "$1" ]
  then
    n="$1" ; shift
  fi
  n=$(( n - 1 ))
  PUSHD -$n
}
alias Down=DOWN
