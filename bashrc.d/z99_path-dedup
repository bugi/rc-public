#!bash
# vim:set ft=sh tabstop=2 softtabstop=2 shiftwidth=2 expandtab autoindent copyindent :

function dedupPath () {
  # Leaves the first copy of a directory in the PATH.
  # Removes the later ones.
  #
  # Assumes your PATH's directories do not contain spaces.  Blech!
  #
  # Empty elements are silently turned into explicit "."s.
  # Eg /sbin:/bin::/usr/bin, the :: having an "empty" in the middle).
  #
  local pathOld=( $( echo "$1" | sed 's/^:/.:/ ; s/:$/:./ ; s/::/:.:/g ; s,/:,:,g ; s,/$,,g ; s/:/ /g' ) )
  shift
  local f
  local -A paths # if this fails, upgrade your bash
  local pathNew=()
  for f in "${pathOld[@]}"
  do
    if [ -z "${paths[$f]}" ]
    then
      paths["$f"]=true
#     if [ -d "$f" ]
#     then
#       # Removes paths that don't presently exist.
#       # This can be problematic if you want your PATH to
#       # include dirs that are mounted only sometimes.
#       pathNew+=( "$f" )
#     fi
    fi
  done
  echo "${pathNew[@]}" | sed 's/ /:/g'
  }

export PATH=$( dedupPath "$PATH" )
